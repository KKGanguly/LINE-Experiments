repeats: 10
seed: 42
checkpoints: [12, 18, 24, 50, 100, 150, 200 ]
datasets:
  - path: data/issue_close
    task: issue close prediction
    target_column_index: -1
    cross_validation: 
      train_split: 0.75
      test_split: 0.25
      train: ["chromium","eclipse","firefox"]
      test: ["test_chromium","test_eclipse","test_firefox"]
      name_seperator: _

models:
  - type: DecisionTree
    needed: 200000
    disable: True
    parameters:
      model_min_samples_leaf: [1, 20]
      model_min_samples_split: [2, 20]
      model_criterion: ["gini", "entropy", "log_loss"]
      model_splitter: ["best", "random"]
      model_max_depth: [1, 10]
      model_max_features: [0.1, 1.0]
      smote_k_neighbors: [1, 10]
      normalizer_norm: ["l1", "l2", "max"]
      quantile_n_quantiles: [100, 1000]
      quantile_output_distribution: ["uniform", "normal"]
      quantile_subsample: [1000, 100000]
      robust_quantile_range_a: [0,50]
      robust_quantile_range_b: [51,100]

  - type: RandomForest
    needed: 200000
    parameters:
      model_n_estimators: [50, 150]
      model_criterion: ["gini", "entropy", "log_loss"]
      model_min_samples_leaf: [1, 20]
      model_min_samples_split: [2, 20]
      model_max_leaf_nodes: [2, 50]
      model_max_features: [0.1,1.00]
      model_max_depth: [1, 10]
      smote_k_neighbors: [1, 10]
      normalizer_norm: ["l1", "l2", "max"]
      quantile_n_quantiles: [100, 1000]
      quantile_output_distribution: ["uniform", "normal"]
      quantile_subsample: [1000, 100000]
      robust_quantile_range_a: [0,50]
      robust_quantile_range_b: [51,100]

  - type: LogisticRegression
    needed: 200000
    parameters:
      model_C: [0.1, 500.00]
      model_solver: ['lbfgs', 'liblinear', 'newton-cg', 'newton-cholesky', 'sag', 'saga']
      model_penalty: ['l1', 'l2']
      model_tol: [0.0, 0.1]
      model_max_iter: [50, 200]
      smote_k_neighbors: [1, 10]
      normalizer_norm: ["l1", "l2", "max"]
      quantile_n_quantiles: [100, 1000]
      quantile_output_distribution: ["uniform", "normal"]
      quantile_subsample: [1000, 100000]
      robust_quantile_range_a: [0,50]
      robust_quantile_range_b: [51,100]
    conditions:
      - parameter: model_solver
        rules:
          - if: model_penalty == 'l1'
            valid_values: ['liblinear', 'saga']
          - if: model_penalty == 'l2'
            valid_values: ['lbfgs', 'liblinear', 'newton-cg', 'newton-cholesky', 'sag', 'saga']
    #verbose not used as it has no impact on HPO
  - type: KNN
    needed: 200000
    parameters:
      model_leaf_size: [10, 100]
      model_n_neighbors: [2, 30]
      model_weights: ['uniform', 'distance']
      model_metric: ['minkowski', 'manhattan', 'euclidean', 'cosine']
      model_p: [3, 30]
      smote_k_neighbors: [1, 10]
      normalizer_norm: ["l1", "l2", "max"]
      quantile_n_quantiles: [100, 1000]
      quantile_output_distribution: ["uniform", "normal"]
      quantile_subsample: [1000, 100000]
      robust_quantile_range_a: [0,50]
      robust_quantile_range_b: [51,100]

  - type: SVM
    needed: 200000
    disable: True
    parameters:
      model_kernel: ['rbf', 'linear', 'poly', 'sigmoid']
      model_degree: [2,10] #increased
      model_coef0: [0.0,0.1]
      model_gamma: [0.0, 1.0]
      model_tol: [0.0, 0.1]
      smote_k_neighbors: [1, 10]
      normalizer_norm: ["l1", "l2", "max"]
      quantile_n_quantiles: [100, 1000]
      quantile_output_distribution: ["uniform", "normal"]
      quantile_subsample: [1000, 100000]
      robust_quantile_range_a: [0,50]
      robust_quantile_range_b: [51,100]
      
  - type: MultinomialNB
    disable: True
    needed: 50000
    parameters:
      model_alpha: [0.0, 1.0]
      smote_k_neighbors: [1, 20]
      normalizer_norm: ["l1", "l2", "max"]
      quantile_n_quantiles: [100, 1000]
      quantile_output_distribution: ["uniform", "normal"]
      quantile_subsample: [1000, 100000]
      robust_quantile_range_a: [0,50]
      robust_quantile_range_b: [51,100]
      standard_enable: ["0"]
      robust_enable: ["0"]

optimizer:
  - name: BOHB
    min_budget: 300
    n_trials: 20
    output_directory: 'smac3_output_bohb'
    initial_configs: 2

output_folder: SMAC3_results_BOHB

runs_output_folder: results_BOHB_Final_Tuned

logging_folder: logging_BOHB_Final_Tuned
